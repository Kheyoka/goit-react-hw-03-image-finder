{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/App.module.css","services/imageApi.js","components/Loader/Loader.js","components/ImageGallery/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","components/ErrorNotification/ErrorNotification.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/App.js","index.js","components/Searchbar/Searchbar.module.css","components/ImageGallery/ImageGalleryItem.module.css"],"names":["module","exports","fetchImages","query","page","axios","get","LoaderSpinner","type","color","height","width","timeout","ImageGalleryItem","image","webformatURL","largeImageURL","className","styles","src","alt","ImageGalleryItemImage","Modal","onClose","Overlay","onClick","role","ImageGallery","state","isModalOpen","openModal","e","currentTarget","target","URL","setState","closeModal","code","window","addEventListener","this","removeEventListener","images","props","map","key","id","Component","ErrorNotification","text","defaultProps","Searchbar","handleChange","value","handleSubmit","preventDefault","onSubmit","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","autoComplete","autoFocus","placeholder","onChange","Button","loadMore","App","isLoading","error","onSubmitSearchbar","onSearch","imageApi","then","response","prevState","data","hits","catch","finally","scrollTo","top","document","documentElement","scrollHeight","behavior","prevProps","message","Loader","length","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.12480afb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2AxMb\",\"Modal\":\"Modal_Modal__2WBTT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__DncjJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3R1xi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2s_Fq\"};","import axios from 'axios';\n\n/* eslint-disable-next-line */\nexport const fetchImages = (query, page = 1) => {\n  return axios.get(\n    `https://pixabay.com/api/?q=${query}&page=${page}&key=15197771-5511dcdc0b7dffb5a53231b1f&image_type=photo&orientation=horizontal&per_page=12`,\n  );\n};\n// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst LoaderSpinner = () => {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n    />\n  );\n};\n\nexport default LoaderSpinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ image: { webformatURL, largeImageURL } }) => (\n  <li className={styles.ImageGalleryItem}>\n    <img\n      src={webformatURL}\n      alt={largeImageURL}\n      className={styles.ImageGalleryItemImage}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.shape({\n    webformatURL: PropTypes.string.isRequired,\n    largeImageURL: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Modal.module.css';\n\nconst Modal = ({ largeImageURL, onClose }) => (\n  <div className={styles.Overlay} onClick={onClose} role=\"presentation\">\n    <div className={styles.Modal}>\n      <img src={largeImageURL} alt=\"\" />\n    </div>\n  </div>\n);\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ImageGallery.module.css';\nimport ImageGalleryItem from './ImageGalleryItem';\nimport Modal from '../Modal/Modal';\n\nclass ImageGallery extends Component {\n  static propTypes = {\n    images: PropTypes.arrayOf(PropTypes.shape({}).isRequired).isRequired,\n  };\n\n  state = {\n    isModalOpen: false,\n    largeImageURL: null,\n  };\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.closeModal);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.closeModal);\n  }\n\n  openModal = e => {\n    if (e.currentTarget !== e.target) {\n      const URL = e.target.alt;\n      this.setState({ isModalOpen: true, largeImageURL: URL });\n    }\n  };\n\n  closeModal = e => {\n    if (e.code === 'Escape' || e.currentTarget === e.target) {\n      this.setState({ isModalOpen: false });\n    }\n  };\n\n  render() {\n    const { isModalOpen, largeImageURL } = this.state;\n    const { images } = this.props;\n    return (\n      <>\n        <ul\n          className={styles.ImageGallery}\n          onClick={this.openModal}\n          role=\"presentation\"\n        >\n          {images.map(image => (\n            <ImageGalleryItem key={image.id} image={image} />\n          ))}\n          {isModalOpen && (\n            <Modal largeImageURL={largeImageURL} onClose={this.closeModal} />\n          )}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ErrorNotification = ({ text }) => <h1>{text}</h1>;\n\nErrorNotification.defaultProps = {\n  text: '',\n};\n\nErrorNotification.propTypes = {\n  text: PropTypes.string,\n};\nexport default ErrorNotification;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    query: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      query: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.query);\n    this.setState({\n      query: '',\n    });\n  };\n\n  render() {\n    const { query } = this.state;\n    return (\n      <header className={styles.Searchbar}>\n        <form className={styles.SearchForm} onSubmit={this.handleSubmit}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            autoComplete=\"off\"\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={query}\n            onChange={this.handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Button.module.css';\n\nconst Button = ({ loadMore }) => (\n  <button type=\"button\" onClick={loadMore} className={styles.Button}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport * as imageApi from '../services/imageApi';\nimport LoaderSpinner from './Loader/Loader';\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport ErrorNotification from './ErrorNotification/ErrorNotification';\nimport Searchbar from './Searchbar/Searchbar';\nimport Button from './Button/Button';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    isLoading: false,\n    query: '',\n    error: null,\n    page: 1,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { query, page } = this.state;\n    if (prevState.query !== query || prevState.page !== page) {\n      this.onSearch(query, page);\n    }\n  }\n\n  onSubmitSearchbar = text => {\n    this.setState({\n      query: text,\n      images: [],\n      page: 1,\n    });\n  };\n\n  onSearch = (query, page) => {\n    this.setState({\n      isLoading: true,\n    });\n\n    imageApi\n      .fetchImages(query, page)\n      .then(response =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...response.data.hits],\n        })),\n      )\n      .catch(error => {\n        this.setState({ error });\n      })\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n\n        this.setState({\n          isLoading: false,\n        });\n      });\n  };\n\n  loadMore = () => {\n    this.setState(prevState => ({\n      page: prevState.page + 1,\n    }));\n  };\n\n  render() {\n    const { images, isLoading, error } = this.state;\n\n    return (\n      <div className={styles.App}>\n        <Searchbar onSubmit={this.onSubmitSearchbar} />\n        {error && <ErrorNotification text={error.message} />}\n        {isLoading && <LoaderSpinner />} <ImageGallery images={images} />\n        {images.length > 0 && <Button loadMore={this.loadMore} />}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__DjWH3\",\"SearchForm\":\"Searchbar_SearchForm__1ac2l\",\"SearchFormButton\":\"Searchbar_SearchFormButton__21S85\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__8f9cn\",\"SearchFormInput\":\"Searchbar_SearchFormInput__VhsfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1n2vU\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__1SzVc\"};"],"sourceRoot":""}